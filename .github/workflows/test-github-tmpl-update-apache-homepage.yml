name: Reusable workflow - Update Apache Homepage
# This workflow runs the update of Apache Homepage based on env, name and page_text variables
# This workflow requeires the following variables:
# - environment: development, stage, prod
# - name - name of author
# - page_text - plain text

on: 
  workflow_call:
    inputs:            # Variables For Automatic Run
      environment:
        type: string
      name: 
        type: string
      page_text: 
        type: string

  workflow_dispatch: 
    inputs:            # Variables For Manual Run
      environment:     
        type: choice
        options: 
          - development
          - staging
          - prod
      name:
        type: string
        default: Vlad
      page_text: 
        type: string
        default: Привет из шаблона пайплайна
        

jobs:
  set_variables:
    runs-on: ubuntu-latest
    outputs: 
      ENVIRONMENT: ${{ steps.set-vars.outputs.ENVIRONMENT }}
      NAME: ${{ steps.set-vars.outputs.NAME }}
      PAGE_TEXT: ${{ steps.set-vars.outputs.PAGE_TEXT }}
    steps:
      - name: Prepare variables for the next job
        id: set-vars
        run: |
          echo "ENVIRONMENT=${{ inputs.environment }}" >> $GITHUB_OUTPUT
          echo "NAME=${{ inputs.name }}" >> $GITHUB_OUTPUT
          echo "PAGE_TEXT=${{ inputs.page_text }}" >> $GITHUB_OUTPUT

  validate_inputs:
    runs-on: ubuntu-latest
    needs: set_variables
    outputs: 
      NAME: ${{ steps.set-default-vars.outputs.NAME }}
      PAGE_TEXT: ${{ steps.set-default-vars.outputs.PAGE_TEXT }}
    steps:
      - name: Validate And Set Environment Variable
        run: |
          if [[ -z "${{ needs.set_variables.outputs.ENVIRONMENT }}" ]]; then
            echo " ERROR: Environment is not defined"
            exit 1
          fi

      - name: Validate Name Variable
        id: validate-or-set-default-name
        run: |
          if [[ -z "${{ needs.set_variables.outputs.NAME }}" ]]; then
            echo "NAME=Default_Name_auto" >> $GITHUB_ENV
          else
            echo "NAME=${{ needs.set_variables.outputs.NAME }}" >> $GITHUB_ENV
          fi

      - name: Validate Page Text Variable
        id: validate-or-set-default-page-text
        run: |
          if [[ -z "${{ needs.set_variables.outputs.PAGE_TEXT }}" ]]; then
            echo "PAGE_TEXT=Default_Page_Text_auto" >> $GITHUB_ENV
          else
            echo "PAGE_TEXT=${{ needs.set_variables.outputs.PAGE_TEXT }}" >> $GITHUB_ENV
          fi

      - name: Prepare variables for the next job
        id: set-default-vars
        run: |
          echo "NAME=$NAME" >> $GITHUB_OUTPUT
          echo "PAGE_TEXT=$PAGE_TEXT" >> $GITHUB_OUTPUT



  create_homepage: 
    runs-on: ubuntu-latest
    needs: validate_inputs
    env:
      HTML_FILE: "ApacheHomepage.html"
    steps:
        - name: Clone Repository "${{ github.repository }}"
          uses: actions/checkout@v4

        - name: Run Unit tests
          run: echo "do some unit testing"
          
        - name: Update Apache Homepage
          continue-on-error: false
          run: |
                echo "${{ inputs.environment }}, ${{ inputs.name }}, ${{ inputs.page_text }}" > "${{ env.HTML_FILE }}"
                cat "${{ env.HTML_FILE }}"

        - name: Call Script For Pushing To "${{ github.repository }}"
          run: bash .scripts/push-to-repo.sh

        - name: Deploy Docker Image
          continue-on-error: true
          run: bash .scripts/build-docker-image.sh
        
  
