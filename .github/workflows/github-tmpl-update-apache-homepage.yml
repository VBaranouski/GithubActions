name: Reusable workflow - Update Apache Homepage
# This workflow runs the update of Apache Homepage based on env, name and page_text variables
# This workflow requeires the following variables:
# - environment: development, stage, prod
# - name - name of author
# - page_text - plain text

on: 
  workflow_call:
    inputs:            # Variables For Automatic Run
      environment:
        type: string
      name: 
        type: string
      page_text: 
        type: string

  workflow_dispatch: 
    inputs:            # Variables For Manual Run
      environment:     
        type: choice
        options: 
          - development
          - staging
          - prod
      name:
        type: string
        default: Vlad
      page_text: 
        type: string
        default: Привет из шаблона пайплайна

jobs:
  create_homepage: 
    runs-on: ubuntu-latest
    env:
      HTML_FILE: "ApacheHomepage.html"
      NAME: ${{ inputs.name || vars.DEFAULT_NAME }} # If inputs.name is provided, it will be used. Otherwise, vars.DEFAULT_NAME will be used 
      PAGE_TEXT: ${{ inputs.page_text || vars.DEFAULT_PAGE_TEXT }} # If inputs.page_text is provided, it will be used. Otherwise, vars.DEFAULT_PAGE_TEXT will be used
    
    steps: 
    # 1. Clone repository
      - name: Clone Repository "${{ github.repository }}"
        uses: actions/checkout@v4

    # 2. Run unit tests
      - name: Run Unit tests
        run: echo "do some unit testing"

    # 3. Verify Environment parameters not to be empty, or Prod. 
      - name: Verify Environment variable
        run: |
          shopt -s nocasematch 
          if [[ -z "${{ inputs.environment }}" ]]; then
               echo " ERROR: Environment is not defined"
               exit 1
          fi
          if [[ "${{ inputs.environment }}" == "prod" ]]; then
            echo " Environment is ${{ inputs.environment }}. Stopping the pipeline."
            exit 1
          fi
          shopt -u nocasematch

    # 4. Build a new Homepage with input parameters
      - name: Update Apache Homepage
        run: |
          echo "${{ inputs.environment }}, ${{ env.NAME }}, ${{ env.PAGE_TEXT }}" > "${{ env.HTML_FILE }}"

     # 5. Push new changes to git repository
      - name: Call Script For Pushing To "${{ github.repository }}"
        continue-on-error: true
        run: bash .scripts/push-to-repo.sh

     # 6. Build docker image and deploy the container
      - name: Deploy Docker Image
        run: bash .scripts/build-docker-image.sh
        
  
